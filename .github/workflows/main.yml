name: Build Launcher

on:
  workflow_dispatch:
  push:

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

jobs:
  windows:
    strategy:
      fail-fast: false
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      #- name: Execute unit tests
      #  run: dotnet test -nologo

      - name: Build Launcher
        run: msbuild -nologo -v:d -clp:ForceConsoleColor -m -p:Configuration=Release -p:Platform=x64

      - name: Publish Launcher
        run: dotnet publish -nologo -c Release /p:Platform="Any CPU" /p:OptimizeUi="true" --self-contained true

      - name: Upload Launcher
        uses: actions/upload-artifact@v3
        with:
          name: Launcher (Windows)
          path: |
            Zelda 3 Launcher\bin\Release\net7.0-windows\publish\Zelda 3 Launcher.exe


#  linux:
#    strategy:
#      matrix:
#        os: [ubuntu-22.04, ubuntu-20.04]
#      fail-fast: false
#    runs-on: ${{ matrix.os }}

 #   steps:
 #     - name: Checkout repo
 #       uses: actions/checkout@v3
 #       with:
 #         fetch-depth: 0

 #     - name: Install .NET Core
 #       uses: actions/setup-dotnet@v3
 #       with:
 #         dotnet-version: 7.x

#      - name: Install dependencies
#        run: |
#          sudo apt-get update -qy
#          sudo apt-get install -qy libsdl2-dev

#      - name: Publish Launcher
#        run: dotnet publish -nologo -c Release -r linux-x64 /p:Platform="Any CPU" /p:OptimizeUi="true"

      #- name: Upload Mesen
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: Launcher
      #    path: launcher.exe
